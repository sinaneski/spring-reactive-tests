plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'io.freefair.lombok' version '5.1.0'
    id 'info.solidsoft.pitest' version '1.5.1'
}

group = 'com.swarts'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "Hoxton.SR5")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'

    testImplementation('org.hamcrest:hamcrest-all:1.3')
    testImplementation('org.mockito:mockito-core:3.3.3')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.7.2')
    testImplementation('com.squareup.okhttp3:okhttp:4.7.2')
    testImplementation('com.github.tomakehurst:wiremock-jre8-standalone:2.26.3')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

pitest {
    threads.set(4)
    outputFormats.set(['XML', 'HTML'])
    timestampedReports.set(false)
    mutators.set(['CONDITIONALS_BOUNDARY', 'VOID_METHOD_CALLS', 'NEGATE_CONDITIONALS',
                  'INVERT_NEGS', 'MATH', 'INCREMENTS',
                  'TRUE_RETURNS', 'FALSE_RETURNS', 'PRIMITIVE_RETURNS', 'EMPTY_RETURNS', 'NULL_RETURNS']
    )
    timeoutConstInMillis.set(10000)
    useClasspathFile.set(true)
    junit5PluginVersion.set('0.12')
    excludedTestClasses.set(['com.swarts.customerservice.integration.*'])
}

test {
    useJUnitPlatform()
}
